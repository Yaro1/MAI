getLast([], _, _):-!, fail. % из пустого списка нельзя выделить последний элемент
getLast([H], H, []):-!. % если список состоит из 1 элемента - то этот элемент и есть последний, а остаток - пустой список
getLast([H|T], R, [H|RL]):- % иначе отделяет от списка первый элемент (Н), у того что осталось (Т) выделяем рекурсивно последний элемент (R) и остаток (RL), прилепляем к RL элемент H чтобы получить результат
  getLast(T, R, RL).

shift(L, [E|RL]):- % сдвиг на 1 элемент. из исходного списка L получаем последний элемент E и остаток (RL). Тогда чтобы получить результат надо к RL в начало приделать E
  getLast(L, E, RL),!.

shift(0, L, L):-!. % если требуется сдвинуть список на 1 элемент-  ничего делать ненадо
shift(N, L, R):- % если надо сдвинуть на N элементов - то
  NN is N - 1,
  shift(L, TL), % сдвинем на 1 элемент
  shift(NN, TL, R), !. % и рекурсивно сдвинем еще на N-1 элемент

goal:-
  L = [1,2,3,4,5], N is 3,
  shift(N, L, R), write(L), nl, write(R), nl.
